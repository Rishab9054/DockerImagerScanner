name: Docker Image Security Scan

on:
  workflow_dispatch:
    inputs:
      image_name:
        description: 'Docker image name (e.g., user/app:tag)'
        required: true
        type: string
      tar_file:
        description: 'Path to saved Docker image tarball (e.g., /tmp/image.tar)'
        required: true
        type: string

  push:
    branches: [ "main" ]

jobs:
  scan-and-push:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Load Docker image from tarball
      run: |
        echo "Loading image from ${{ github.event.inputs.tar_file }}"
        docker load -i "${{ github.event.inputs.tar_file }}"

    - name: Run Trivy vulnerability scan
      id: trivy-scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: "${{ github.event.inputs.image_name }}"
        format: 'table'
        exit-code: '0'  # don't fail the build immediately
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'
        output: 'trivy-results.txt'

    - name: Check scan results for vulnerabilities
      id: check-vulns
      run: |
        if grep -q "CRITICAL\|HIGH" trivy-results.txt; then
          echo "VULNERABILITIES_FOUND=true" >> $GITHUB_OUTPUT
        else
          echo "VULNERABILITIES_FOUND=false" >> $GITHUB_OUTPUT
        fi

    - name: Upload scan report
      uses: actions/upload-artifact@v4
      with:
        name: trivy-report
        path: trivy-results.txt

    - name: Push Docker image to Docker Hub
      if: steps.check-vulns.outputs.VULNERABILITIES_FOUND == 'false'
      run: |
        echo "No critical/high vulnerabilities found. Pushing image..."
        docker push "${{ github.event.inputs.image_name }}"

    - name: Fail if vulnerabilities are found
      if: steps.check-vulns.outputs.VULNERABILITIES_FOUND == 'true'
      run: |
        echo "‚ùå Image has CRITICAL or HIGH vulnerabilities. Not pushing."
        exit 1
